{"version":3,"sources":["i18n/i18n.js","DatastoreSearchSql.js","index.js","App.js"],"names":["i18n","use","LanguageDetector","initReactI18next","init","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","resources","en","translation","da","fr","pt_BR","react","useSuspense","initImmediate","fallbackLng","keySeparator","interpolation","escapeValue","DatastoreSearchSql","props","resource","JSON","parse","stringify","dateFields","schema","fields","filter","field","type","includes","defaultDateFieldName","length","name","otherFields","t","useTranslation","operators","label","react_default","a","createElement","formik_esm","initialValues","rules","date","startDate","endDate","fieldName","validate","values","clonedValues","errors","message","onSubmit","action","handleSubmit","onReset","render","_ref","setFieldValue","handleReset","className","component","map","index","value","key","concat","title","entry_default","clearIcon","nativeInputAriaLabel","dayAriaLabel","monthAriaLabel","yearAriaLabel","onChange","val","format","aria-hidden","returnValue","minDate","arrayHelpers","rule","aria-label","required","operator","onClick","remove","insert","combinator","push","options","console","log","instance","document","getElementById","getAttribute","ReactDOM","apiUrl","proxy","api","urlObj","URL","pathParts","pathname","split","pop","join","search","href","path","origin","src_DatastoreSearchSql","filterBuilderAction","e","warn"],"mappings":"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","file":"static/js/main.72384dec.chunk.js","sourcesContent":["import i18n from \"i18next\";\nimport LanguageDetector from \"i18next-browser-languagedetector\";\nimport { initReactI18next } from \"react-i18next\";\nimport en from './locales/en/translation.json'\nimport da from './locales/da/translation.json'\nimport fr from './locales/fr/translation.json'\nimport pt_BR from './locales/pt_BR/translation.json'\n\ni18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n\n    // for all options read: https://github.com/i18next/i18next-browser-languageDetector#detector-options\n    detection: {\n      order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n      // keys or params to lookup language from\n      lookupQuerystring: 'lng',\n      lookupCookie: 'defaultLocale',\n      lookupLocalStorage: 'defaultLocale',\n      lookupFromPathIndex: 0,\n      lookupFromSubdomainIndex: 0,\n    },\n\n    resources: {\n      en: {translation: en},\n      da: {translation: da},\n      fr: {translation: fr},\n      pt_BR: {translation: pt_BR}\n    },\n\n    react: {\n      useSuspense: false\n    },\n\n    initImmediate: false,\n    fallbackLng: \"en\",\n\n    // use content as keys\n    keySeparator: false,\n\n    interpolation: {\n      escapeValue: false\n    }\n  });\n\nexport default i18n;","import \"./i18n/i18n\"\n\nimport React from 'react';\nimport {Formik, Form, FieldArray, Field} from 'formik'\nimport DatePicker from 'react-date-picker'\nimport {useTranslation} from \"react-i18next\"\n\n\nfunction DatastoreSearchSql(props) {\n  const resource = JSON.parse(JSON.stringify(props.resource))\n\n  const dateFields = resource.schema.fields.filter(field => field.type && field.type.includes('date'))\n  const defaultDateFieldName = dateFields.length > 0 ? dateFields[0].name : null\n  const otherFields = resource.schema.fields.filter(field => !(field.type && field.type.includes('date')))\n\n  const { t } = useTranslation();\n\n  const operators = [\n    {name: '=', label: '='},\n    {name: '!=', label: '!='},\n    {name: '<', label: '<'},\n    {name: '>', label: '>'},\n    {name: '<=', label: '<='},\n    {name: '>=', label: '>='}\n  ]\n\n  function validate(values) {\n    const clonedValues = JSON.parse(JSON.stringify(values))\n    const errors = {}\n    if (!clonedValues.date.startDate && !clonedValues.date.endDate && clonedValues.rules.length === 0) { // No filters given so alert about that\n      errors.message = 'Please, provide at least one rule.'\n    }\n    return errors\n  }\n\n  function handleSubmit(values) {\n    props.action(values)\n  }\n\n  function handleReset() {\n    props.action({})\n  }\n\n  function getInitalstate() {\n    if (props.filter){\n      return props.filter\n    } else {\n      return { rules: [], startDate: null, endDate: null }\n    }\n  }\n\n  return (\n    <Formik\n      initialValues={{\n        rules: [], \n        date: {\n          startDate: null,\n          endDate: null,\n          fieldName: defaultDateFieldName\n        } \n      }}\n      validate={values =>\n        validate(values)\n      }\n      onSubmit={values =>\n        handleSubmit(values)\n      }\n      onReset={() =>\n        handleReset()\n      }\n      render={({ values, setFieldValue, handleReset }) => (\n        <Form className=\"form-inline dq-main-container\">\n          <div className=\"dq-heading\"></div>\n          {defaultDateFieldName ? (\n            <div className=\"dq-date-picker\">\n              <Field name={`date.fieldName`} component=\"select\" className=\"form-control\">\n                { dateFields.map((field, index) => (\n                  <option value={field.name} key={`dateField${index}`}>{field.title || field.name}</option>\n                ))}\n              </Field>\n              <DatePicker\n                value={values.date.startDate}\n                clearIcon='X'\n                nativeInputAriaLabel=\"Start date input box\"\n                dayAriaLabel=\"Start day\"\n                monthAriaLabel=\"Start month\"\n                yearAriaLabel=\"Start year\"\n                onChange={val => setFieldValue(`date.startDate`, val)}\n                format='yyyy-MM-dd' />\n              <span className=\"fa fa-long-arrow-right\" aria-hidden=\"true\"></span>\n              <DatePicker\n                  value={values.date.endDate}\n                  clearIcon='X'\n                  nativeInputAriaLabel=\"End date input box\"\n                  dayAriaLabel=\"End day\"\n                  monthAriaLabel=\"End month\"\n                  yearAriaLabel=\"End year\"\n                  onChange={val => setFieldValue(`date.endDate`, val)}\n                  returnValue='end'\n                  format='yyyy-MM-dd'\n                  minDate={values.date.startDate} />\n            </div>\n          ) : (\n            ''\n          )}\n          <FieldArray\n            name='rules'\n            render={arrayHelpers => (\n              <div className=\"dq-rule-container\">\n                <div className=\"dq-body\">\n                {values.rules && values.rules.length > 0 ? (\n                  values.rules.map((rule, index) => (\n                    <div key={index} className=\"dq-rule-item\">\n                      <Field name={`rules.${index}.combinator`} aria-label=\"Choose combinator: AND/OR\" component=\"select\" className=\"form-control\" required>\n                        <option value=\"AND\">AND</option>\n                        <option value=\"OR\">OR</option>\n                      </Field>\n                      <Field name={`rules.${index}.field`} aria-label=\"Choose field\" component=\"select\" className=\"form-control\" required>\n                        {otherFields.map((field, index) => (\n                          <option value={field.name} key={`field${index}`}>{field.title || field.name}</option>\n                        ))}\n                      </Field>\n                      <Field name={`rules.${index}.operator`} aria-label=\"Choose operator\" component=\"select\" className=\"form-control\" required>\n                        {operators.map((operator, index) => (\n                          <option value={operator.name} key={`operator${index}`}>{operator.label}</option>\n                        ))}\n                      </Field>\n                      <Field name={`rules.${index}.value`} aria-label=\"Input custom rule\" className=\"form-control\" required />\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-default dq-btn-remove\"\n                        onClick={() => arrayHelpers.remove(index)} // remove a rule from the list\n                      >\n                        -\n                      </button>\n                      <button\n                        type=\"button\"\n                        className=\"btn btn-default dq-btn-add\"\n                        onClick={() => arrayHelpers.insert(index, {combinator: 'AND', field: otherFields[0].name, operator: '=', value: ''})} // insert an empty rule at a position\n                      >\n                        +\n                      </button>\n                    </div>\n                  ))\n                ) : (\n                  <button type=\"button\" className=\"btn btn-default dq-rule-add\" onClick={() => arrayHelpers.push({combinator: 'AND', field: otherFields[0].name, operator: '=', value: ''})}>\n                    {/* show this when user has removed all rules from the list */}\n                    {t('Add a rule')}\n                  </button>\n                )}\n                </div>\n                <div className=\"dq-rule-submit dq-footer\">\n                  <button type=\"submit\" className=\"btn btn-primary submit-button\">{t('Submit')}</button>\n                  <button type=\"submit\" className=\"btn btn-primary reset-button\" onClick={handleReset}>{t('Reset')}</button>\n                </div>\n              </div>\n            )}\n          />\n        </Form>\n      )}\n    />\n  )\n}\n\nexport default DatastoreSearchSql;\n","import i18n from \"./i18n/i18n\";\nimport React from 'react';\n\nimport { QueryBuilder } from './App';\nimport ReactDOM from 'react-dom';\n\n\nif (i18n.options.resources) {\n  console.log('Translations loaded')\n}\n\n\nconst filterBuilderAction = (rules) => {\n  console.log(rules)\n  document.getElementById(\"filters\").value = JSON.stringify(rules);\n}\n\nconst instance = document.getElementById('datapackage-filters')\nconst resource = JSON.parse(instance.getAttribute('resource'))\nconst filter = instance.getAttribute('filters') ? JSON.parse(instance.getAttribute('filters')) : false\n\n\ntry {\nReactDOM.render(\n  <QueryBuilder resource={resource} filterBuilderAction={filterBuilderAction} filter={filter} />,\n  document.getElementById('datapackage-filters')\n);\n} catch (e) {\n  console.warn('Failed to render datapackage-filter', e)\n}\n\n\n","import React from 'react';\nimport './App.css';\nimport DatastoreSearchSql from './DatastoreSearchSql';\n\n\nexport const QueryBuilder = (props) => {\n  const resource = JSON.parse(JSON.stringify(props.resource))\n  const filter = props.filter ? JSON.parse(JSON.stringify(props.filter)): false\n\n  if (resource.schema) {\n    let apiUrl\n    if (resource.proxy || resource.api) {\n      const urlObj = new URL(resource.proxy || resource.api)\n      // Remove action name from the URL so we get base API URL\n      let pathParts = urlObj.pathname.split('/')\n      pathParts.pop()\n      urlObj.pathname = pathParts.join('/') + '/' // Trailing slash for consistency\n      urlObj.search = '' // Remove all search params\n      apiUrl = urlObj.href\n    } else {\n      apiUrl = (new URL(resource.path)).origin + '/api/3/action/'\n    }\n    return (\n      <div className=\"App\">\n        <DatastoreSearchSql\n          resource={resource}\n          apiUrl={apiUrl}\n          action={props.filterBuilderAction}\n          filter={filter}\n        />\n      </div>\n    );\n  } else {\n    return (\n      <div className=\"no-filters\"></div>\n    );\n  }\n}\n"],"sourceRoot":""}