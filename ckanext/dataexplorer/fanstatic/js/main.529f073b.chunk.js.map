{"version":3,"sources":["../node_modules/tableschema/lib/profiles sync /^/.//.*/.json$","utils/index.js","reducers/widgets.js","reducers/datapackage.js","reducers/datastoreFilters.js","reducers/serializedState.js","reducers/rootReducer.js","store.js","components/DataView/index.js","components/Share/index.js","components/Pagination/index.js","utils/loadDataset.js","actions/index.js","App.js","AppWithProvider.js","serviceWorker.js","index.js","i18n/i18n.js"],"names":["map","./geojson.json","./table-schema.json","./topojson.json","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","module","exports","unloadDatapackage","datapackage","unloadedDatapackage","deepClone","resources","forEach","resource","data","_values","views","view","obj","JSON","parse","stringify","reducers_widgets","state","arguments","length","undefined","action","type","stateForChartBuilder","widget","specType","payload","assign","stateForMapBuilder","widgets","reducers_datapackage","datastoreFilters","reducers_serializedState","root","clonedRoot","serializedState","loading","console","warn","rootReducer","initialState","configureStore","props","createStore","composeWithDevTools","applyMiddleware","thunk","DataView","t","useTranslation","react_default","a","createElement","react_loader_default","loaded","style","position","spec","dist_App","key","Math","random","className","slimProps","Share","prop","slim","urlObj","URL","window","location","href","searchParams","set","shareLink","iframe","concat","shareable","copy","str","el","document","value","setAttribute","left","body","appendChild","select","execCommand","removeChild","toString","slice","title","onClick","apiUri","Pagination","react_paginate_dist_default","previousLabel","nextLabel","breakLabel","breakClassName","pageCount","ceil","totalrowcount","marginPagesDisplayed","pageRangeDisplayed","onPageChange","selected","offset","api","includes","sql","get","regex","test","replace","updateAction","containerClassName","activeClassName","toArray","require","parseDatapackageIdentifier","stringOrJSON","loadDataset","dpID","DP_ID","tabularFormats","dataset","regenerator_default","async","_context2","prev","next","awrap","Dataset","load","sent","Promise","all","file","headers","response","result","fileInline","_headers","rowStream","_response","_result","_context","displayName","abrupt","descriptor","Headers","append","fetch","ok","unavailable","json","records","_ref","index","_id","_full_text","_count","objectWithoutProperties","total","schema","open","values","format","addSchema","rows","size","keyed","t0","toLowerCase","path","stop","selectTab","res","objectSpread2","datapackageLoad","fetchDataBegin","fetchDataSuccess","connect","dispatch","filterUIAction","getState","newResource","updatedDatapackage","loadingWidgets","loadedDataset","datastore_active","compileView","fetchDataAction","dataViewBuilderAction","actionType","selectTabAction","active","name","split","useEffect","selectedTab","activeWidget","find","nonDataStoreViewTypes","datastoreComponents","totalRows","toLocaleString","distinguisher","retrieveSelectedTab","illegalCharacters","tabLinks","lib","to","tabContents","for","chart_builder_dist","map_builder_dist","isWebView","_unused","showQueryBuilder","dist","filterBuilderAction","renderActiveTabContentOnly","handleSelect","AppWithProvider","log","widgetNames","table","tabularmap","simple","widgetsFromViews","react_redux_es","store","src_App_0","Boolean","hostname","match","instances","getElementsByClassName","i18n","use","LanguageDetector","initReactI18next","init","detection","order","lookupQuerystring","lookupCookie","lookupLocalStorage","lookupFromPathIndex","lookupFromSubdomainIndex","en","translation","da","fr","react","useSuspense","initImmediate","debug","nsSeparator","keySeparator","fallbackLng","interpolation","escapeValue","then","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","done","instance","getAttribute","rest","ReactDOM","render","getElementById","err","return","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.529f073b.chunk.js","sourcesContent":["var map = {\n\t\"./geojson.json\": 295,\n\t\"./table-schema.json\": 727,\n\t\"./topojson.json\": 296\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 726;","export const unloadDatapackage = datapackage => {\n  const unloadedDatapackage = deepClone(datapackage)\n  \n  unloadedDatapackage.resources && unloadedDatapackage.resources.forEach(resource => {\n    delete resource.data\n    delete resource._values\n  })\n  \n  unloadedDatapackage.views && unloadedDatapackage.views.forEach(view => {\n    view.resources && view.resources.forEach(resource => {\n      delete resource.data\n      delete resource._values\n    })\n  })\n\n  return unloadedDatapackage\n}\n\nexport const getEmptyView = datapackage => {\n  try {\n    return {resources: [{schema: datapackage.resources[0].schema}]}\n  } catch (e) {\n    return {}\n  }\n}\n\nexport const getDataViewChartBuilderView = (datapackage) => {\n  if (!datapackage) return {}\n\n  const views = datapackage.views || []\n\n  switch (views.length) {\n    case 1:\n      return datapackage.views[0]\n    case 2:\n      return datapackage.views[1]\n    case 3:\n      return datapackage.views[2]\n    default:\n      return getEmptyView(datapackage)\n  }\n}\n\nexport const showQueryBuilder = (props) => {\n  const activeWidget = props.widgets.find(widget => widget.active)\n  let isWebView = false\n\n  try {\n    const nonDataStoreViewTypes = ['web', 'document']\n    isWebView = nonDataStoreViewTypes.includes(activeWidget.datapackage.views[0].specType)\n  } catch {\n    // just continue -- not a web view\n  }\n\n  if (isWebView) return false\n\n  return props.datapackage.resources[0].datastore_active\n}\n\nexport const getDataViewMapBuilderView = (datapackage) => {\n  if (!datapackage) return {}\n\n  const views = datapackage.views || []\n\n  return views.find(view => view.specType === 'tabularmap') || getEmptyView(datapackage)\n}\n\nexport const getResourceForFiltering = (datapackage) => {\n  if (!datapackage) return {}\n  return datapackage.resources[0]\n}\n\nexport const deepClone = obj => {\n  return JSON.parse(JSON.stringify(obj))\n}\n","import { deepClone } from '../utils'\n\nexport default (state = {}, action) => {\n  switch (action.type) {\n    case 'DATA_VIEW_CHART_BUILDER_ACTION':\n      let stateForChartBuilder = deepClone(state)\n      stateForChartBuilder = stateForChartBuilder.map(widget => {\n        if (widget.datapackage.views[0].specType === 'simple') {\n          widget.datapackage.views[0] = action.payload\n        }\n        return widget\n      })\n      return Object.assign(deepClone(state), stateForChartBuilder)\n    case 'DATA_VIEW_MAP_BUILDER_ACTION':\n      let stateForMapBuilder = deepClone(state)\n      stateForMapBuilder = stateForMapBuilder.map(widget => {\n        if (widget.datapackage.views[0].specType === 'tabularmap') {\n          widget.datapackage.views[0] = action.payload\n        }\n        return widget\n      })\n      return Object.assign(deepClone(state), stateForMapBuilder)\n    case 'SELECT_TAB':\n      return action.payload.widgets\n    case 'FETCH_DATA_BEGIN':\n      return action.payload.widgets\n    case 'FETCH_DATA_SUCCESS':\n      return action.payload.widgets\n    case 'FETCH_DATA_FAILURE':\n      return action.payload.widgets\n    default:\n     return state\n  }\n}\n","export default (state = {}, action) => {\n  switch (action.type) {\n   case 'DATAPACKAGE_LOAD':\n    return action.payload.datapackage\n   default:\n    return state\n  }\n }\n ","export default (state = {}, action) => {\n  switch (action.type) {\n   case 'FILTER_UI_ACTION':\n    return state \n   default:\n    return state\n  }\n }\n ","import { deepClone, unloadDatapackage } from '../utils'\n\n// updates on every action and translates app state to shareable links\nexport default (state = {}, action, root) => {\n  try {\n    const clonedRoot = deepClone(root)\n    delete clonedRoot.serializedState\n    const datapackage = unloadDatapackage(clonedRoot.datapackage)\n    const widgets = clonedRoot.widgets.map(widget => {\n      widget.datapackage = unloadDatapackage(widget.datapackage)\n      widget.loading = false\n      return widget\n    })\n\n    return JSON.stringify(Object.assign(clonedRoot, {datapackage, widgets}))\n  } catch (e) {\n    console.warn(e)\n    return {}\n  }\n}\n","import { default as widgets } from './widgets'\nimport { default as datapackage } from './datapackage'\nimport { default as datastoreFilters } from './datastoreFilters'\nimport { default as serializedState } from './serializedState'\n\nexport default (state = {}, action) => {\n  return {\n    widgets: widgets(state.widgets, action),\n    datapackage: datapackage(state.datapackage, action),\n    datastoreFilters: datastoreFilters(state.datastoreFilters, action),\n    serializedState: serializedState(state.serializedState, action, state) // we pass root of tree so it can export entire app state\n  }\n}\n","import { createStore, applyMiddleware } from 'redux'\nimport { composeWithDevTools } from 'redux-devtools-extension'\nimport thunk from 'redux-thunk'\nimport rootReducer from './reducers/rootReducer'\n\nconst initialState = {\n  datastoreFilters: {\n    // Datastore specific filters\n  },\n  datapackage: {},\n  widgets: [],\n  serializedState: {}\n}\n\nexport default function configureStore(props) {\n \n return createStore(\n   rootReducer,\n   Object.assign({}, initialState, props),\n   composeWithDevTools(applyMiddleware(thunk))\n )\n}\n","import \"../../i18n/i18n\";\nimport React from 'react'\nimport Loader from 'react-loader'\nimport { DataView } from '@datopian/datapackage-views-js'\nimport { useTranslation } from \"react-i18next\";\n\nexport default props => {\n  const { t } = useTranslation();\n\n  const views = props.datapackage.views\n\n  const showGuideText = (specType) => {\n    return (\n      <div className=\"dx-guiding-text\">\n        {specType === 'simple' ? <p>{t('Select chart type, group column (abscissa x-axis) and series (ordinate y-axis) on the right hand side panel.')}</p> : '' }\n        {specType === 'tabularmap' ? <p>{t('Select geo data column on the right hand side panel.')}</p> : '' }\n      </div>\n    )\n  }\n\n  const checkIfGuideIsNeeded = (view) => {\n    if (view.specType === 'simple' && !(view.spec && Object.keys(view.spec).length > 0)) {\n      return true\n    }\n    return false\n  }\n\n  return (\n  <Loader loaded={!props.loading} style={{position: \"relative\"}}>\n    <div>\n      {\n        checkIfGuideIsNeeded(views[0])\n        ? showGuideText(views[0].specType)\n        : views.map(view => <DataView key={Math.random()} datapackage={{views: [view]}} />)\n      }\n    </div>\n  </Loader>\n  )\n}\n","import \"../../i18n/i18n\";\nimport React from 'react'\n\nimport { useTranslation } from \"react-i18next\";\n\nconst MAX_LEN = 1500\nconst slimProps = ['archiver', 'schema', 'shareLink', 'iframeText']\nconst slim = serializedState => {\n  if (serializedState.length <= MAX_LEN) return serializedState\n  const state = JSON.parse(serializedState)\n  state.datapackage.resources.forEach(resource => {\n    for (const prop in slimProps) {\n      if (resource[slimProps[prop]]) delete resource[slimProps[prop]]\n    }\n  })\n  return JSON.stringify(state)\n}\n\nexport default props => {\n\n  const { t } = useTranslation();\n\n  const serializedState = slim(props.serializedState)\n  const urlObj = new URL(window.location.href)\n  urlObj.searchParams.set('explorer', serializedState)\n  const shareLink = urlObj.href\n  const iframe = `<iframe src=\"${urlObj.href}\" />`\n  const shareable = shareLink.length < 2000\n\n  const copy = (str) => {\n    // Create new element\n    var el = document.createElement('textarea')\n    // Set value (string to be copied)\n    el.value = str\n    // Set non-editable to avoid focus and move outside of view\n    el.setAttribute('readonly', '')\n    el.style = {position: 'absolute', left: '-9999px'}\n    document.body.appendChild(el)\n    // Select text inside element\n    el.select()\n    // Copy text to clipboard\n    document.execCommand('copy')\n    // Remove temporary element\n    document.body.removeChild(el)\n  }\n\n  return (\n      <div className=\"dx-share-container\">\n        {shareable\n          ? <div>\n              <div className=\"m-4 ml-0 dx-share-link\">\n                <input id={\"share-link-\"+Math.random().toString(36).slice(2,5)} title=\"Share link\" className=\"border-solid border-2 border-gray-600 w-1/2 px-2\" value={shareLink} />\n                <a href=\"#/\" id={\"copy-share-link-\"+Math.random().toString(36).slice(2,5)} className=\"m-4\" onClick={() => {copy(shareLink)}}><em>{t(\"copy share link\")}</em></a>\n              </div>\n              <div className=\"m-4 ml-0 dx-embed-link\">\n                <input id={\"embed-\"+Math.random().toString(36).slice(2,5)} title=\"Embedded link\" className=\"border-solid border-2 border-gray-600 px-2 w-1/2\" value={iframe} />\n                <a href=\"#/\" id={\"copy-share-link-\"+Math.random().toString(36).slice(2,5)} className=\"m-4\" onClick={() => {copy(iframe)}}><em>{t(\"copy embed text\")}</em></a>\n              </div>\n            </div>\n          : <p className=\"no-share-link-message\">{t('No share link available')}</p>\n        }\n        {props.apiUri\n          && <div className=\"m-4 ml-0 dx-apiuri-link\">\n                <input id={\"apiUri-\"+Math.random().toString(36).slice(2,5)} title=\"API URI link\" className=\"border-solid border-2 border-gray-600 px-2 w-1/2\" value={props.apiUri} />\n                <a href=\"#/\" id={\"copy-share-link-\"+Math.random().toString(36).slice(2,5)} className=\"m-4\" onClick={() => {copy(props.apiUri)}}><em>{t(\"copy API URI\")}</em></a>\n             </div>\n        }\n      </div>\n  )\n}\n","import \"../../i18n/i18n\";\nimport React from 'react';\nimport ReactPaginate from 'react-paginate';\n\nimport { useTranslation } from \"react-i18next\";\n\n\nexport default props => {\n\n  const { t } = useTranslation();\n\n  function handlePageClick (data) {\n    const selected = data.selected\n    const offset = Math.ceil(selected * 100)\n    const resource = JSON.parse(JSON.stringify(props.datapackage.resources[0]))\n    const urlObj = new URL(resource.api)\n    if (resource.api.includes('datastore_search?')) {\n      urlObj.searchParams.set('offset', offset)\n    } else if (resource.api.includes('datastore_search_sql?')) {\n      const sql = urlObj.searchParams.get('sql')\n      const regex = /OFFSET(%20|\\s)\\d+/\n      if (regex.test(sql)) {\n        urlObj.searchParams.set('sql', sql.replace(regex, `OFFSET ${offset}`))\n      } else {\n        urlObj.searchParams.set('sql', sql + ` OFFSET ${offset}`)\n      }\n      resource.api = resource.api.includes('offset')\n    }\n    resource.api = urlObj.href\n    props.updateAction(resource)\n  }\n\n  return (\n    <ReactPaginate\n      previousLabel={t('Previous')}\n      nextLabel={t('Next')}\n      breakLabel={'...'}\n      breakClassName={'break-me'}\n      pageCount={Math.ceil(props.datapackage.resources[0].totalrowcount/100)}\n      marginPagesDisplayed={2}\n      pageRangeDisplayed={5}\n      onPageChange={handlePageClick}\n      containerClassName={'pagination'}\n      activeClassName={'active'}\n    />\n  )\n}\n","import { Dataset, open } from 'data.js'\n\nvar toArray = require('stream-to-array')\n\nfunction parseDatapackageIdentifier(stringOrJSON) {\n  try {\n    return JSON.parse(stringOrJSON)\n  } catch (e) {\n    return stringOrJSON\n  }\n}\n\n// needs to be encapsulated\n// should be library code\nexport default async dpID => {\n  const DP_ID = parseDatapackageIdentifier(dpID)\n  const tabularFormats = ['csv', 'tsv', 'dsv', 'xls', 'xlsx']\n\n  try {\n    const dataset = await Dataset.load(DP_ID)\n\n    await Promise.all(dataset.resources.map(async (file) => {\n      if (file.displayName === 'FileInline') {\n        return\n      } else if (file.descriptor.api && file.descriptor.api.includes('datastore_search')) {\n        // Datastore, e.g., when a path is a 'datastore_search' API\n        var headers = new Headers();\n        headers.append(\"Request-Source\", \"data-explorer\");\n        \n        const response = await fetch(file.descriptor.api, { headers: headers })\n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        // Remove fields that start with `_` as we don't want to display internal values,\n        // e.g., `_id`, `_full_text` and `_count`\n        file.descriptor.data = result.result.records.map(({ _id, _full_text, _count, ...etc }, index) => etc)\n        if (result.result.records.length === 0) {\n          file.descriptor.totalrowcount = 0\n        } else {\n          file.descriptor.totalrowcount = result.result.total || result.result.records[0]._count\n        }\n\n        if (!file.descriptor.schema) {\n          // Infer schema but re-open the file as it is now \"inlined\":\n          const fileInline = open({\n            data: file.descriptor.data.map(Object.values),\n            format: 'csv'\n          })\n          const headers = Object.keys(file.descriptor.data[0] || {})\n          fileInline.descriptor.data = [headers].concat(fileInline.descriptor.data)\n          await fileInline.addSchema()\n          file.descriptor.schema = fileInline.descriptor.schema\n        }\n      } else if (file.displayName === \"FileRemote\" && tabularFormats.includes(file.descriptor.format)) {\n        // Tabular data\n        try {\n          const rowStream = await file.rows({size: 100, keyed: true})\n          const data = await toArray(rowStream)\n          if (data.length > 0) {\n            file.descriptor.data = data // This makes it FileInline\n          } else {\n            file.descriptor.unavailable = true\n          }\n          await file.addSchema()\n        } catch (e) {\n          console.warn(e)\n          file.descriptor.unavailable = true\n        }\n      } else if (file.descriptor.format.toLowerCase().includes('json')) {\n        // Geographical data\n        var headers = new Headers();\n        headers.append(\"Request-Source\", \"data-explorer\");\n        const response = await fetch(file.descriptor.path, {\n          headers: headers\n        })\n        \n        if (!response.ok) {\n          file.descriptor.unavailable = true\n          return\n        }\n        const result = await response.json()\n        // The '.json' files can contain geo data - check by its 'type' property\n        const geoJsonTypes = [\n          'Feature', 'FeatureCollection', 'Point', 'MultiPoint', 'LineString',\n          'MultiLineString', 'Polygon', 'MultiPolygon', 'GeometryCollection'\n        ]\n        if (geoJsonTypes.includes(result.type)) {\n          file.descriptor.data = result\n        } else {\n          // It isn't a valid GeoJSON\n          file.descriptor.unavailable = true\n          return\n        }\n      } else if (file.descriptor.format.toLowerCase() === 'pdf') {\n        return\n      } else {\n        // We can't load any other data types for now.\n        file.descriptor.unavailable = true\n      }\n    }))\n\n    return dataset.descriptor\n  } catch (e) {\n    console.warn('Failed to load a Dataset from provided datapackage id\\n' + e)\n    return DP_ID\n  }\n}\n","import loadDataset from '../utils/loadDataset'\nimport { compileView } from 'datapackage-render';\n\nexport const selectTabAction = (payload) => (dispatch, getState) => {\n  const widgets = JSON.parse(JSON.stringify(getState().widgets))\n\n  widgets.forEach((widget, index) => {\n    widgets[index].active = false\n    if (widget.name === payload ||\n      (payload.includes('-') && payload.split('-')[0] === widget.name)) {\n      widgets[index].active = true\n    }\n  })\n  dispatch(selectTab({widgets}))\n}\n\nexport const filterUIAction = (payload) => async (dispatch, getState) => {\n let datapackage = JSON.parse(JSON.stringify(getState().datapackage))\n // For datastore resources, we need to remove loaded `data` attribute to\n // trigger re-fetch of a resource. This is required since we initially fetch\n // only subset of data from datastore, eg, first 100 rows. When user applies\n // filters, we need to hit datastore api and update the data.\n const newResource = JSON.parse(JSON.stringify(payload))\n const updatedDatapackage = Object.assign(datapackage, {resources: [newResource]})\n if (updatedDatapackage.resources[0].datastore_active) {\n   delete updatedDatapackage.resources[0].data\n }\n // Update state.datapackage with new resource path that includes filters (datastore query)\n dispatch(datapackageLoad({datapackage: updatedDatapackage}))\n // Set state of widgets as loading\n const loadingWidgets = JSON.parse(JSON.stringify(getState().widgets))\n    .map(widget => {\n      widget.loading = true\n      return widget\n    })\n  dispatch(fetchDataBegin({widgets: loadingWidgets}))\n  // Load dataset using new path and update state\n  datapackage = JSON.parse(JSON.stringify(getState().datapackage))\n  const loadedDataset = await loadDataset(datapackage)\n  dispatch(datapackageLoad({datapackage: loadedDataset}))\n  // Compile new data into widget views\n  const widgets = JSON.parse(JSON.stringify(getState().widgets))\n    .map(widget => {\n      widget.datapackage.views = widget.datapackage.views\n        .map(view => compileView(view, loadedDataset))\n      widget.loading = false\n      return widget\n    })\n  dispatch(fetchDataSuccess({widgets}))\n}\n\nexport const dataViewBuilderAction = (payload) => dispatch => {\n  let actionType\n  if (payload.specType === 'simple') {\n    actionType = 'DATA_VIEW_CHART_BUILDER_ACTION'\n  } else if (payload.specType === 'tabularmap') {\n    actionType = 'DATA_VIEW_MAP_BUILDER_ACTION'\n  }\n  dispatch({\n    type: actionType,\n    payload\n  })\n}\n\nexport const fetchDataAction = payload => async dispatch => {\n  const loadingWidgets = JSON.parse(JSON.stringify(payload.widgets))\n    .map(widget => {\n      widget.loading = true\n      return widget\n    })\n  dispatch(fetchDataBegin({widgets: loadingWidgets}))\n  const datapackage = JSON.parse(JSON.stringify(payload.datapackage))\n  const loadedDataset = await loadDataset(datapackage)\n  dispatch(datapackageLoad({datapackage: loadedDataset}))\n  const widgets = JSON.parse(JSON.stringify(payload.widgets))\n    .map(widget => {\n      widget.datapackage.views = widget.datapackage.views\n        .map(view => compileView(view, loadedDataset))\n      return widget\n    })\n  dispatch(fetchDataSuccess({widgets}))\n}\n\nconst selectTab = res => ({\n  type: 'SELECT_TAB',\n  payload: { ...res }\n})\n\nconst datapackageLoad = res => ({\n  type: 'DATAPACKAGE_LOAD',\n  payload: { ...res }\n})\n\nconst fetchDataBegin = res => ({\n  type: 'FETCH_DATA_BEGIN',\n  payload: { ...res }\n})\n\nconst fetchDataSuccess = res => ({\n  type: 'FETCH_DATA_SUCCESS',\n  payload: { ...res }\n})\n\nconst fetchDataFailure = err => ({\n  type: 'FETCH_DATA_FAILURE',\n  payload: { err }\n})\n","import React, {useEffect} from 'react'\nimport { connect } from 'react-redux'\nimport './App.css'\nimport { QueryBuilder } from '@datopian/datastore-query-builder'\nimport DataView from './components/DataView'\nimport Share from './components/Share'\nimport Pagination from './components/Pagination'\nimport { ChartBuilder } from '@datopian/chart-builder'\nimport { MapBuilder } from '@datopian/map-builder'\nimport { Tabs, TabLink, TabContent } from 'react-tabs-redux'\nimport { filterUIAction, fetchDataAction, dataViewBuilderAction, selectTabAction } from './actions/'\nimport { getResourceForFiltering, showQueryBuilder } from './utils'\n\nimport \"./i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nexport const App = props => {\n  useEffect(() => {\n    const payload = {\n      datapackage: props.datapackage,\n      widgets: props.widgets\n    }\n    props.fetchDataAction(payload)\n  }, [])\n\n  const activeWidget = props.widgets.find(widget => {\n    return widget.active\n  })\n\n  const { t } = useTranslation();\n\n  // Check if any of widgets requires datastore specific components:\n  const nonDataStoreViewTypes = ['web', 'document']\n  const datastoreComponents = props.widgets.find(widget => {\n    return widget.datapackage.views\n      .find(view => !nonDataStoreViewTypes.includes(view.specType))\n  })\n\n  const totalRows =\n        props.datapackage.resources[0].datastore_active\n          ? props.datapackage.resources[0].totalrowcount\n            ? props.datapackage.resources[0].totalrowcount.toLocaleString()\n            : ''\n          : ''\n\n  var distinguisher = '-' + Math.random().toString(36).slice(2,5)\n  const retrieveSelectedTab = activeWidget ? activeWidget.name : props.widgets[0].name\n  let selectedTab\n\n  if (retrieveSelectedTab.includes('-')) {\n    selectedTab = retrieveSelectedTab\n  } else {\n    selectedTab = retrieveSelectedTab+distinguisher\n  }\n  var illegalCharacters = /\\W+/gi\n  selectedTab = selectedTab.replace(illegalCharacters, \"-\")\n\n  const tabLinks = props.widgets.map((widget, index) => {\n    return <TabLink to={(widget.name + distinguisher).replace(illegalCharacters, \"-\")} className={`mr-4 tab-${widget.name.toLowerCase()}`} key={`tabLink-${index}`}>{t(widget.name)}</TabLink>\n  })\n\n  const tabContents = props.widgets.map((widget, index) => {\n    return <TabContent for={(widget.name + distinguisher).replace(illegalCharacters, \"-\")} className={`mr-4 tabpanel-${widget.name.toLowerCase()}`} key={`tabContent-${index}`}>\n        {\n          (['table', 'web'].includes(widget.datapackage.views[0].specType))\n          ? <div className=\"container flex py-6\">\n              <div className=\"w-full py-3\">\n                <DataView {...widget} />\n              </div>\n            </div>\n          : <div className=\"container flex py-6\">\n              <div className=\"w-3/4 py-3 mr-4\">\n                <DataView {...widget} />\n              </div>\n              <div className=\"w-1/4\">\n                <div className=\"w-full\">\n                  <div className=\"p-4 mr-4\">\n                   {\n                      widget.datapackage.views[0].specType === 'simple'\n                      ? <ChartBuilder view={widget.datapackage.views[0]} dataViewBuilderAction={props.dataViewBuilderAction} />\n                      : ''\n                    }\n                    {\n                      widget.datapackage.views[0].specType === 'tabularmap'\n                      ? <MapBuilder view={widget.datapackage.views[0]} dataViewBuilderAction={props.dataViewBuilderAction} />\n                      : ''\n                    }\n                  </div>\n                </div>\n              </div>\n            </div>\n        }\n    </TabContent>\n  })\n\n  return (\n    <div className=\"data-explorer\">\n      {totalRows && datastoreComponents && (<div className=\"total-rows\">\n        <span className=\"total-rows-label\">{t('Total rows')}</span>: <span className=\"total-rows-value\">{totalRows}</span>\n      </div>)\n      }\n      {/* Data Editor (aka filters / datastore query builder) */}\n      <div className=\"datastore-query-builder\">\n        {\n          showQueryBuilder(props)\n          ? <QueryBuilder resource={getResourceForFiltering(props.datapackage)} filterBuilderAction={props.filterUIAction} />\n          : ''\n        }\n      </div>\n      {/* End of Data Editor */}\n      {/* Widgets (aka Views and Controls/Builders) */}\n      <Tabs\n        renderActiveTabContentOnly={true}\n        handleSelect={(selectedTab) => {\n          props.selectTabAction(selectedTab)\n        }}\n        className=\"data-explorer-content\"\n        selectedTab={selectedTab}>\n          {tabLinks}\n          {tabContents}\n      </Tabs>\n\n      {/* Pagination for DataStore resources */}\n      {props.datapackage.resources[0].datastore_active && datastoreComponents\n        ? <Pagination datapackage={props.datapackage} updateAction={props.filterUIAction} />\n      : <div className=\"no-pagination not-datastore-resource\"></div>\n      }\n      {/* End of Pagination */}\n\n      {/* Share feature */}\n      {datastoreComponents\n        ? <Share serializedState={props.serializedState} apiUri={props.datapackage.resources[0].api} />\n        : <div className=\"no-share-feature\"></div>\n      }\n      {/* End of Share feature */}\n\n      {/* End of Widgets */}\n     </div>\n  )\n}\n\nconst mapStateToProps = state => ({\n ...state\n})\n\nconst mapDispatchToProps = dispatch => ({\n filterUIAction: (payload) => dispatch(filterUIAction(payload)),\n fetchDataAction: payload => dispatch(fetchDataAction(payload)),\n dataViewBuilderAction: payload => dispatch(dataViewBuilderAction(payload)),\n selectTabAction: payload => dispatch(selectTabAction(payload))\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App)\n","import React from 'react'\nimport { Provider } from 'react-redux'\nimport configureStore from './store'\nimport './App.css'\nimport App from './App'\n\nimport \"./i18n/i18n\";\nimport { useTranslation } from \"react-i18next\";\n\nexport default props => {\n\n  const { t } = useTranslation();\n\n  let datapackage\n\n  // Allow datapackage json or obj\n  if (typeof props.datapackage === 'string') {\n    try {\n      datapackage = JSON.parse(props.datapackage)\n    } catch (e) {\n      // TODO -- would be nice for the app to still load in an empty state on fail case\n      datapackage = {}\n      console.warn('Invalid datapackage', e)\n    }\n  } else if (typeof props.datapackage === 'object') {\n    datapackage = props.datapackage\n  }\n\n  let views\n\n  try {\n    views = JSON.parse(JSON.stringify(datapackage.views))\n    delete datapackage.views\n  } catch {\n    console.log('No views set on datapackage')\n  }\n\n  const widgetsFromViews = (views) => {\n    const widgetNames = {\n      'table': t('Table'),\n      'tabularmap': t('Map'),\n      'map': t('Map'),\n      'simple': t('Chart')\n    }\n\n    return views.map((view, index) => {\n      return {\n        active: index === 0 ? true : false,\n        name: widgetNames[view.specType],\n        datapackage: {views: [view]}\n      }\n    })\n  }\n\n  const widgets = (props.widgets) ? props.widgets : widgetsFromViews(views)\n\n  return (\n    <Provider store={configureStore({widgets, datapackage})}>\n      <App />\n    </Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import {initTranslations} from './i18n/i18n'\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport './App.css'\nimport App from './AppWithProvider'\n\nimport * as serviceWorker from './serviceWorker';\n\nconst instances = document.getElementsByClassName('data-explorer')\n\n\ninitTranslations().then(() => {\n  for (const instance of instances) {\n    try {\n      const props = JSON.parse(instance.getAttribute('data-datapackage'))\n      const { datapackage, ...rest} = props\n\n      ReactDOM.render(\n        <App datapackage={datapackage} {...rest} />, document.getElementById(instance.id)\n      )\n    } catch (e) {\n      console.warn('Failed to render data-explorer', e)\n    }\n  }\n})\n\nserviceWorker.unregister();\n","import i18n from \"i18next\"\nimport LanguageDetector from \"i18next-browser-languagedetector\"\nimport {initReactI18next} from \"react-i18next\"\n\n\nexport const initTranslations = async () => {\n  await i18n\n  .use(LanguageDetector)\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n\n    // for all options read: https://github.com/i18next/i18next-browser-languageDetector#detector-options\n    detection: {\n      order: ['querystring', 'cookie', 'localStorage', 'navigator', 'htmlTag', 'path', 'subdomain'],\n\n      // keys or params to lookup language from\n      lookupQuerystring: 'lng',\n      lookupCookie: 'defaultLocale',\n      lookupLocalStorage: 'defaultLocale',\n      lookupFromPathIndex: 0,\n      lookupFromSubdomainIndex: 0,\n    },\n\n    resources: {\n      en: {\n        translation: {\n          ...require('./locales/en/translation.json'),\n          ...require('@datopian/chart-builder/src/i18n/locales/en/translation.json'),\n          ...require('@datopian/map-builder/src/i18n/locales/en/translation.json'),\n          ...require('@datopian/datapackage-views-js/src/i18n/locales/en/translation.json'),\n          ...require('@datopian/datastore-query-builder/src/i18n/locales/en/translation.json'),\n        }\n      },\n      da: {\n        translation: {\n          ...require('./locales/da/translation.json'),\n          ...require('@datopian/chart-builder/src/i18n/locales/da/translation.json'),\n          ...require('@datopian/map-builder/src/i18n/locales/da/translation.json'),\n          ...require('@datopian/datapackage-views-js/src/i18n/locales/da/translation.json'),\n          ...require('@datopian/datastore-query-builder/src/i18n/locales/da/translation.json'),\n        }\n      },\n      fr: {\n        translation: {\n          ...require('./locales/fr/translation.json'),\n          ...require('@datopian/chart-builder/src/i18n/locales/fr/translation.json'),\n          ...require('@datopian/map-builder/src/i18n/locales/fr/translation.json'),\n          ...require('@datopian/datapackage-views-js/src/i18n/locales/fr/translation.json'),\n          ...require('@datopian/datastore-query-builder/src/i18n/locales/fr/translation.json'),\n        },\n      },\n    },\n\n    react: {\n      useSuspense: false\n    },\n\n    initImmediate: false,\n    debug: false,\n\n    // allow keys to be phrases having `:`, `.`\n    nsSeparator: false,\n    keySeparator: false,\n\n    // do not load a fallback\n    fallbackLng: false,\n\n    interpolation: {\n      escapeValue: false\n    }\n  })\n}\n"],"sourceRoot":""}